version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - internal

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - 9092:9092
    hostname: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - internal

  devices-service:
      build: .
      container_name: devices-service
      ports:
        - "8080:8080"
      environment:
        - DATABASE_PORT=5432
        - DATABASE_USER=postgres
        - DATABASE_PASSWORD=password
        - DATABASE_NAME=devices
        - DATABASE_HOST=db
        - SERVER_PORT=8080
        - KAFKA_HOST=kafka
        - KAFKA_PORT=9092
        - KAFKA_TOPIC_STATUS_CHANGED=devices.status
      depends_on:
        db:
            condition: service_healthy
        kafka:
            condition: service_healthy
      networks:
        - internal

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - 8090:8080
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    networks:
      - internal
  
  db:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: devices
    volumes:
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d devices'"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - internal
networks:
  internal: